(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{597:function(t,s,a){t.exports=a.p+"assets/img/1651585431633.0c3a5f3d.png"},598:function(t,s,a){t.exports=a.p+"assets/img/1651590279578.88d69576.png"},599:function(t,s,a){t.exports=a.p+"assets/img/1651591284124.078e8ba8.png"},600:function(t,s,a){t.exports=a.p+"assets/img/1651591042305.7f9d3488.png"},601:function(t,s,a){t.exports=a.p+"assets/img/1651590829832.219c9e5d.png"},602:function(t,s,a){t.exports=a.p+"assets/img/1651590895995.38853176.png"},603:function(t,s,a){t.exports=a.p+"assets/img/1651589720183.db4d9438.png"},604:function(t,s,a){t.exports=a.p+"assets/img/1652834385709.e1f22a26.png"},605:function(t,s,a){t.exports=a.p+"assets/img/1652065353283.b1e92cd2.png"},606:function(t,s,a){t.exports=a.p+"assets/img/1652029769269.166ca5ab.png"},680:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("Screeps Arena 是一款类似红色警戒或者星际争霸的RTS游戏，但是你不能靠鼠标指针和实时控制来操作进程，唯一可以用的方法是编程。通过编写JavaScript（或其他语言）代码，控制从采集资源、生产单位、建造、移动、攻击的各种操作和应变逻辑，来让自己的战略运行起来，和其他的代码成果进行对局。")]),t._v(" "),n("p",[t._v("本文是该游戏的一些介绍和入门基础。\n")]),t._v(" "),n("h2",{attrs:{id:"购买安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#购买安装"}},[t._v("#")]),t._v(" 购买安装")]),t._v(" "),n("p",[t._v("Steam中搜索Screeps Arena，当前处于抢先购买阶段，定价为rmb 70元，可使用微信或支付宝，正式版售价不会降低。购买后下载安装运行。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(597),alt:"1651585431633.png"}})]),t._v(" "),n("p",[t._v("也可以不购买先下载Demo版本，Demo版本只可以进行教程模式的游戏。试试自己能够通关教程，再去购买也是一种稳妥的选择，因为光过完教程也可能也会超两小时退款时间。")]),t._v(" "),n("p",[t._v("关闭游戏以后想再次运行可以从steam中的“库”标签中找到本游戏。")]),t._v(" "),n("h2",{attrs:{id:"游戏内置教程关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#游戏内置教程关"}},[t._v("#")]),t._v(" 游戏内置教程关")]),t._v(" "),n("p",[t._v("初进入游戏界面，三种主要游戏模式都处于锁定状态，首先需要点击右上角Tutorial（教程）按钮，按照教程说明完成10个教程的代码编写和胜利。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(598),alt:"1651590279578.png"}})]),t._v(" "),n("p",[t._v("胜利都可以Take Reward（获得奖励）。全部通关后可获得100个key fragment(钥匙碎片)，刚好可以在Inventory中兑换一个Basic key（基础模式钥匙），用于开启基础模式。开启基础模式后，还可以使用 300 个key fragment和3种颜色各10个的Upgrade key升级到高级模式。")]),t._v(" "),n("p",[t._v("教程关里有介绍API和游戏方式的说明，很多关卡都提供了示例代码可以直接拷贝使用。只有最后一关第10关是一个小测试，没有示例代码，需要自行理解和组合前面各段代码，正确组合运行。")]),t._v(" "),n("p",[t._v("别看前面示例给的很全，第10关还真的会难住不少新人，因为对游戏机制了解不够的话，用以往的编程经验不一定能顺利过关，这里需要一篇单独的文字详细介绍，暂先空缺。")]),t._v(" "),n("h2",{attrs:{id:"游戏模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#游戏模式"}},[t._v("#")]),t._v(" 游戏模式")]),t._v(" "),n("p",[t._v("模式分为夺旗、造兵、采集3种模式，主要是地形、初始资源和胜利目标有所不同。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(599),alt:"1651591284124.png"}})]),t._v(" "),n("p",[n("strong",[t._v("夺旗模式")]),t._v("：初始给予一些战斗单位和防御塔，目标是占领地方的旗帜。基本纯战斗战术模式。"),n("br"),t._v(" "),n("strong",[t._v("造兵模式")]),t._v("：初始有一个基地，需要自己造兵采集资源，建造军队，打垮对方基地。有一些沼泽地形影响移动。需要生产、运营和战斗。"),n("br"),t._v(" "),n("strong",[t._v("采集模式")]),t._v("：初始有一个基地，需要自己造兵采集资源，目标是双方争夺采集一种特殊资源填充到同一目标容器中，谁先填满或者控制到时间结束为胜。有一些占领和特殊地形的概念。")]),t._v(" "),n("h3",{attrs:{id:"排位赛"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#排位赛"}},[t._v("#")]),t._v(" 排位赛")]),t._v(" "),n("p",[t._v("每个模式都有天梯对战积分(Rating)和排名(Rank)。点击Rating可以查看自己最近的排名对战记录以及观看录像。点击Rank可以查看整个天梯排名情况。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(600),alt:"1651591042305.png"}})]),t._v(" "),n("p",[t._v("所对战的敌人主要是处于相近积分的其他玩家当时那个版本的代码。这里的代码有一个版本概念，每次你修改完善自己的代码并进行天梯排名对战时，你这个代码版本就会以v1,v2这样递增的形式保存到服务器，供其他人匹配对战。")]),t._v(" "),n("p",[t._v("高级模式类似，有一些细节不同，积分和排名各自重新计算。")]),t._v(" "),n("h3",{attrs:{id:"训练赛"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#训练赛"}},[t._v("#")]),t._v(" 训练赛")]),t._v(" "),n("p",[t._v("在排位赛之外，你还可以进行测试赛来调试代码，完善战术。")]),t._v(" "),n("p",[t._v("点击箭头展开匹配设置")]),t._v(" "),n("p",[n("img",{attrs:{src:a(601),alt:"1651590829832.png"}})]),t._v(" "),n("p",[t._v("绿框是选择排位赛，可以选择进行多次连续战斗，是否失败后不继续排位。")]),t._v(" "),n("p",[t._v("红框就是训练赛，可指定训练对手。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(602),alt:"1651590895995.png"}})]),t._v(" "),n("p",[t._v("第一个就是系统木桩（System Idle），敌人什么都不会做，你随意发挥。")]),t._v(" "),n("p",[t._v("然后是最近曾对战过5个敌人，尤其是你曾失败过的（红色方块标记），在这个模式如同入虚境一般，一旦你输给他，你可以无数次的调整代码针对他的战术，直到打赢。这也是新手阶段最快的学习和成长模式，一边观察敌人的方式，一边找到打赢他的途径，")]),t._v(" "),n("h3",{attrs:{id:"挑战赛-fame"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#挑战赛-fame"}},[t._v("#")]),t._v(" 挑战赛（Fame）")]),t._v(" "),n("p",[t._v("挑战赛每天只可以进去一次，可以收获钥匙碎片为奖励。 在这里最多可以进行十场匹配战斗，每次下一个敌人会比上一次的强力不少。每次胜利可以得到一个成就点和一次奖励升级，但是每次失败会损失双倍奖励。")]),t._v(" "),n("p",[t._v("奖励内容赢一场时10左右个普通钥匙碎片，赢3场大约是14个普通钥匙碎片和2个彩色升级钥匙。但是由于失败惩罚是双倍，如果过贪可能会颗粒无收。由于每次挑战只能点击一次获取收益（Take）按钮，所以在没法保证胜率的情况下，要在已有胜场时提前点击Take按钮，来锁定奖励。")]),t._v(" "),n("p",[t._v("每次第一次匹配的都是Idle，所以代码没成型前一胜就拿奖励走人也算一种日常低保。当然Take之后还可以继续进行下一场Fame，看看自己能打到哪一级。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(603),alt:"1651589720183.png"}})]),t._v(" "),n("p",[t._v("退出挑战赛后，才可以继续进行排位赛。")]),t._v(" "),n("h2",{attrs:{id:"开始游戏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开始游戏"}},[t._v("#")]),t._v(" 开始游戏")]),t._v(" "),n("p",[t._v("准备进入游戏前，点击Script folder为本模式选择按钮（下图红框），弹出目录选择窗口，选定当前要使用代码"),n("strong",[t._v("目录")]),t._v("，游戏会自动将该目录下的main.mjs作为游戏入口程序文件，并加载相关的引用文件（只支持 ES6 模块 import/export 形式）。这些代码会传到服务器上执行，匹配一个通模式的其他玩家的相近等级代码版本作为敌人，战斗结果可以点观战或者查看录像。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(604),alt:"1652834385709.png"}})]),t._v(" "),n("p",[t._v("右边的绿框Open打开按钮，可以打开所指定的代码目录。推荐下载使用VS Code编辑器作为代码编辑器。")]),t._v(" "),n("h2",{attrs:{id:"使用-typescript-模板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-typescript-模板"}},[t._v("#")]),t._v(" 使用 TypeScript 模板")]),t._v(" "),n("p",[t._v("推荐使用TS编写游戏代码，因为游戏的代码调试比较麻烦，改一句代码开一局游戏验证比较耗时，使用TS可以提前发现很多代码的bug，我个人感觉至少避免了60%以上问题。")]),t._v(" "),n("p",[t._v("这里一个社区维护的TS模板，基于模板编写自己的程序可以避免大量的配置工作，推荐使用："),n("br"),t._v("\nhttps://github.com/screepers/screeps-arena-typescript-starter")]),t._v(" "),n("p",[t._v("当然了要有要安装Node.js环境。")]),t._v(" "),n("p",[n("strong",[t._v("用法")])]),t._v(" "),n("div",{staticClass:"language-s line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("git clone https://github.com/screepers/screeps-arena-typescript-starter\ncd ./screeps-arena-typescript-starter\nnpm i\n# 这里由于用到了一个未发布的@types要从Github拉取，所以 npm i 可能会由于墙而失败。\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("安装后src/arena_*/main.ts是我们要编写源码的入口，"),n("code",[t._v("npm run build")]),t._v(" 时这些文件都会被编译到dist/arena_*/main.mjs，也是我们在Script folder中要指定的目录。也可以直接运行一次"),n("code",[t._v("npm run watch")]),t._v("，这样每次ts代码有修改保存时会自动编译。")]),t._v(" "),n("p",[t._v("VS Code中也可以通过点按钮的形式启动npm命令。\n"),n("img",{attrs:{src:a(605),alt:"1652065353283.png"}})]),t._v(" "),n("h2",{attrs:{id:"其他技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他技巧"}},[t._v("#")]),t._v(" 其他技巧")]),t._v(" "),n("h3",{attrs:{id:"代码技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码技巧"}},[t._v("#")]),t._v(" 代码技巧")]),t._v(" "),n("p",[t._v("main中的loop函数为游戏的主要逻辑的入口，loop会每个tick调用一次，所以如果有想要保留给下个tick使用的变量，可以定义在loop之外。")]),t._v(" "),n("h3",{attrs:{id:"spawn-造兵相关问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spawn-造兵相关问题"}},[t._v("#")]),t._v(" spawn 造兵相关问题")]),t._v(" "),n("p",[t._v("spawn问题在新手期常会把人搞晕，我的观察是，在spawn执行spawnCreep的那个回合（取名tick1），如果函数调用成功，可以拿到返回值的object。但是此时object对象的各个字段为空，想存id还办不到，待下一个tick时系统会填充（如id，x,y）才能取到，同时在tick1+1中GameObject已经在地图上可以点击，")]),t._v(" "),n("h3",{attrs:{id:"动作同时执行优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动作同时执行优先级"}},[t._v("#")]),t._v(" 动作同时执行优先级")]),t._v(" "),n("p",[n("img",{attrs:{src:a(606),alt:"1652029769269.png"}})]),t._v(" "),n("p",[t._v("见文档 https://docs.screeps.com/simultaneous-actions.html")]),t._v(" "),n("h3",{attrs:{id:"寻路函数文档测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#寻路函数文档测试"}},[t._v("#")]),t._v(" 寻路函数文档测试")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有3个方法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveTo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RoomPosition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      opts"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MoveToOpts\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("findPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fromPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("opts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//默认忽略障碍")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("searchPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" goal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("opts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" opts"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  costMatrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 地形导航代价数组")]),t._v("\n  ignore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要忽略的位置数组，会被认为是墙")]),t._v("\n  plainCost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 平地区域代价 默认2")]),t._v("\n  swampCost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 藻泽地区代价 默认10")]),t._v("\n  flee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否逃离 默认false")]),t._v("\n  maxOps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大步数")]),t._v("\n  maxCost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大路径代价")]),t._v("\n  heuristicWeight "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启发权重。1-9的权重，应用于A*算法(A-Star)。F = G + weight * H 默认值1.2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qq_35247337/article/details/121099995",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于A*算法"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("使用flee的时候，会计算离目标距离为range远的最小代价目标点。所以必须使用"),n("code",[t._v("goal={pos,range}")]),t._v("的结构传入target")])])}),[],!1,null,null,null);s.default=e.exports}}]);